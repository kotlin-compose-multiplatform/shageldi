{
  "id": "compose-navigation",
  "title": "Jetpack compose navigation",
  "description": "Jetpack compose navigation",
  "date": "2025-05-18",
  "coverImage": "/blogs/navigation/cover.png",
  "tags": ["jetpack", "compose","navigation"],
  "markdown": "![banner](/blogs/navigation/header.webp) \n## Gurnamak üçin:\n\n```kotlin\ndependencies {\n    val nav_version = \"2.9.0\"\n\n    implementation(\"androidx.navigation:navigation-compose:$nav_version\")\n}\n```\n\nEger-de version catalog ulanýan bolsaňyz, onda `libs.versions.toml` içine şu aşakdakylary ýazmaly:\n\n```yaml\n[versions]\nnavigation=\"2.8.9\"\n\n[libraries]\nnavigation={module=\"androidx.navigation:navigation-compose\", version.ref=\"navigation\"}\n```\n\nSoňra bolsa `build.gradle.kts` **(app level)**  içine:\n\n```kotlin\ndependencies {\n\timplementation(libs.navigation)\n}\n```\n\n### NavHost bilen iň ýönekeý nawigatsiýa döredeliň\n\nIlki bilen Routes class döredeliň, route atlaryny hardcoded etmezlik üçin:\n\n```kotlin\nclass Routes {  \n    object FirstScreen {  \n        const val ROUTE: String = \"FirstScreen\"  \n    }  \n    object SecondScreen {  \n        const val ROUTE: String = \"SecondScreen\"  \n    }  \n}\n```\n*aslynda bardäki FirstScreen we SecondScreen string hardcoded edip `composable(\"FirstScreen\")` görünşde hem ulanyp bolýar*\n\n#### Ýönekeý iki sahypaly nawigatsiýamyzy döredeliň ýokarda döreden Routes class-y ulanyp:\n\n```kotlin\nimport androidx.compose.material3.Text  \nimport androidx.compose.runtime.Composable  \nimport androidx.navigation.compose.NavHost  \nimport androidx.navigation.compose.composable  \nimport androidx.navigation.compose.rememberNavController  \n  \n@Composable  \nfun MyApp() {  \n    val navHostController = rememberNavController()  \n    NavHost(  \n        navController = navHostController,  \n        startDestination = Routes.FirstScreen.ROUTE  \n    ) {  \n        composable(Routes.FirstScreen.ROUTE) {  \n            Text(\"Birinji sahypa\")  \n        }  \n  \n        composable(Routes.SecondScreen.ROUTE) {  \n            Text(\"Ikinji sahypa\")  \n        }  \n    }\n}\n```\n\n1. `navHostController = rememberNavController()` NavHost-y controll etmek üçin controller bolup, öz içine `navigate()`, `popBackStack()`, `navigateUp()` ýaly funksiýalary saklaýar. Bu funksiýalary soňra nädip we näme üçin ulanylýandygyny aýdyp geçeris.\n2. `NavHost` Ähli route-lary öz içinde saklaýan taýyn `@Composable` funksiýa\n3. `startDestination` bu parameter haýsy sahypa birinji açylmaly ýa-da görünmelidigini kesgitleýär, biziň ýagdaýymyzda `FirstScreen` birinji açylýar ýagny kody işledenimizde ekrana birinji bolup \"Birinji sahypa\" teks komponent çykar.\n4. `composable()` haýsy route-da haýsy `@Composable` ýagny komponent görünmelidigini kesgitleýär.\n\n### Geliň bir sahypadan beýlekisine nädip geçmeli öwreneliň\n\n```kotlin\n// ýokarky kodlar üýtgemeýär\ncomposable(Routes.FirstScreen.ROUTE) {  \n    Column(  \n\t    modifier = Modifier.fillMaxSize(),  \n\t    horizontalAlignment = Alignment.CenterHorizontally,  \n\t    verticalArrangement = Arrangement.Center  \n\t) {\n        Text(\"Birinji sahypa\")  \n        Button(  \n            onClick = {  \n                navHostController.navigate(Routes.SecondScreen.ROUTE)  \n            }  \n        ) {  \n            Text(\"Indiki\")  \n        }  \n    }\n}\n// aşakdky kodlar üýtgemeýär\n```\n\n1. `navHostController.navigate()` düwma basanymyzda çagyrylan funksiýa birinji sahypadan ikinjä geçirýär. Haçanda \"Indiki\" düwmesine basanymyzda \"Ikinji sahypa\" ýazgysy çykar bu bolsa `SecondScreen` bolup gidýär.\n\n### Bir sahypadan beýleki sahypa nädip maglumat geçirmeli?\n\n**Geliň birinji sahypadan ikinji sahypa ulanyjynyň adyny, familýasyny we ýaşyny geçireli, bu meselemde men static görnüşde geçirip görkezýän, eger isleseşiz `TextField`-a ýazan zadyny hem geçirip bilersiňiz**\n\n*biz maglumat geçirmek diýip atlandyrýas, compose nawigatsiýada olara arguments diýilýär*\n##### Ilki bilen Routes class-ymyz üýtgeşme giriziliň:\n\n```kotlin\n// goşmaça import-lary goşalyň maglumat geçirmek üçin\nimport androidx.navigation.NamedNavArgument  \nimport androidx.navigation.NavType  \nimport androidx.navigation.navArgument\n\nclass Routes {  \n\t// FirstScreen hiç zad üýtgetmek zerurlygy ýok, \n\t// maglumaty ugradyjy dälde kabul edijide görkezilmeli argumentlar\n    object FirstScreen {  \n        const val ROUTE: String = \"FirstScreen\"  \n    }  \n    object SecondScreen {  \n        const val ROUTE: String = \"SecondScreen/{name}/{surname}/{age}\"  \n        val ARGUMENTS: List<NamedNavArgument> = listOf(  \n            navArgument(\"name\") {  \n                type = NavType.StringType  \n            },  \n            navArgument(\"surname\") {  \n                type = NavType.StringType  \n            },  \n            navArgument(\"age\") {  \n                type = NavType.IntType  \n            }  \n        )  \n  \n        fun buildRoute(name: String, surname: String, age: Int): String {  \n            return ROUTE  \n                .replace(\"{name}\", name)  \n                .replace(\"{surname}\", surname)  \n                .replace(\"{age}\", age.toString())  \n        }  \n    }  \n}\n```\n\n1. `navArgument` bu maglumatyň adyny we data type-ny (görnüşini) görkezmek üçin ýörite funksiýa, birinji `navArgument(\"name\")` bu maglumatyň ady we bu ýere islendik zady ýazmak bolar, ikinji `type = NavType.StringType` bolsa ugradyljak bolýan maglumatyň tipini kesgitleýär.\n2. `buildRoute()` funksiýasyny özümiz elde döredýäs işimiz ýeňilleşdirmek we düşniklik bolmagy üçin, köp ýerlerde ulananymyzda şol bir kody gaýta ýazmazlyk üçin.\n3. `buildRoute(): String` bu funksiýanyň gaýtarýan jogaby biziň ýagdaýmyzda şeýle bolar: `SecondScreen/Shageldi/Alyyew/25`, ýagny edil web-daky ýaly path görnüşinde geçirilýär compose-da maglumatlar (aslynda başgaça görnüşi hem bar ony `TypeSafe` nawigatsiýa temasynda öwrenip geçeris)\n\n**Birinji sahypadan knopka basylanda maglumatlary ugradýan kod:**\n\n```kotlin\ncomposable(Routes.FirstScreen.ROUTE) {  \n    Column(  \n        modifier = Modifier.fillMaxSize(),  \n        horizontalAlignment = Alignment.CenterHorizontally,  \n        verticalArrangement = Arrangement.Center  \n    ) {  \n        Text(\"Birinji sahypa\")  \n        Button(  \n            onClick = {  \n                navHostController.navigate(Routes.SecondScreen.buildRoute(  \n                    name = \"Shageldi\",  \n                    surname = \"Alyyew\",  \n                    age = 25  \n                ))  \n            }  \n        ) {  \n            Text(\"Indiki\")  \n        }  \n    }\n}\n```\n\n1. `buildRoute()` funksiýasy bir string ýazgy gaýtarýanyny ýokarda belläp geçdik, aslynda göni şu ýere şol gaýtarylýan string-y alyp goýsak hem işleýär, ýagny `navHostController.navigate(\"SecondScreen/Shageldi/Alyyew/25\")`, ýöne route düşnikli we gaýtadan ulanmana amatly bolmagy üçin şeýle görnüşde edenimiz gowy bolýar. Sebäbi bir sahypany birnäçe ýerde çagyrylýan ýerleri bolýar her sapar hardcode edip gitmek gowy tejribe däl. \n\n**Ikinji sahypada bolsa ugradylan maglumatlary kabul edip ekranda görkezeliň:**\n\n```kotlin\ncomposable(Routes.SecondScreen.ROUTE, Routes.SecondScreen.ARGUMENTS) { backStack->  \n    val name = backStack.arguments?.getString(\"name\")  \n    val surname = backStack.arguments?.getString(\"surname\")  \n    val age = backStack.arguments?.getInt(\"age\", 0)  \n    Column(  \n        modifier = Modifier.fillMaxSize(),  \n        horizontalAlignment = Alignment.CenterHorizontally,  \n        verticalArrangement = Arrangement.Center  \n    ) {  \n        Text(\"Salam: $name $surname $age\")  \n    }  \n}\n```\n\n1. `backStack` bu ululyk özünde şu wagtky shaypanyň maglumatlaryny saklaýar we her bir sahypanyň ýagny route-yň öz `backStackEntry` bolýa, bu ululygyň tipi `NavBackStackEntry` bolup ol özünde diňe bir argumentlary däl `Lifecycle`, `ViewModelStore`, `SavedStateRegistry` ýaly maglumatlary hem saklaýar we bu maglumatlar sahypadan doly yza çykylýança saklanyp durýar we sahypadan çykylanda maglumatlar ýitýär. Her bir sahypanyň `state` - ny ýitirmän saklamak şu ululygyň wezipesi bolup durýar. State saklamak name üçin gerekdigini biz `BottomNavigationBar` temamyzda giňişleýin duryp geçeris.\n2. `backStack.arguments?.getString()` bu funksiýanyň kömegi bilen degişli argumenty (maglumaty) adyny görkezmek arkaly içindäki maglumaty alyp bolýar. Ady `ROUTE`-daky görkezilen atlar bilen hökman gabat gelmeli, ýagny `{name}/{surname}/{age}` şularyň haýsy hem bolsa biri bolup biler, eger-de ýok at bilen argumenty aljak bolsaňyz `Exception` berer we programmadan çykaryp göýberer. \n3. `getString() getInt()` bu ýerde hökmany ýagdaýda ýokarda route-da görkezen `NavType` bilen gabat gelmelidir.\n  ![gif](/blogs/navigation/arguments.gif)"
}

