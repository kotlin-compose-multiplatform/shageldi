{
  "id": "blog-001",
  "title": "KOTLIN MULTIPLATFORM näme zat?",
  "description": "Kotlin Multiplatform diňe targetlaryň (android, ios, desktop, web, hat-da server side) logikasyny paýlaşýar",
  "date": "2025-01-01",
  "coverImage": "/images/kmp.webp",
  "tags": ["kmp", "kotlin","multiplatform"],
  "markdown": "![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*_2ZcZ0qelw0g7j4IiggUiw.png)\n\n> Geliň neýtral okyjy hökmünde okalyň\n\nIslendik bir täze tehnologiýa öňki bar bolanlaryň kemçiliklerine seredip şol kemçilikleri düzetmek maksady bilen döredilýär. Cross platform development-da Flutter-yň alternatiwy bolup çykmak bul seniň tehnologiýaňy programmistlere ulandyrmagy kynlaşdyrýar, sorag döreýär “Näme üçin eýýäm işläp duran kodym barka men flutter-dan başgasyny saýlamaly”, “Näme üçin men başga dile geçmeli”. Jetbrains bu meseläni göz öňünde tutyp Cross Platform däl-de Multi Platform framework döretdi.\n\nEýýäm Google we Jetbrains tarapyndan goldanýan tehnologiýa barada habarsyz galma!!!\n\nEger-de Google KMP-da gowy geljegi görmesedi biderek wagtyny gidirip support etmezdi. Support sözüniň manysy diňe bir sözde galanok sebäbi, Google eýýäm Room Database, Data Store ýaly kitaphanalary (librarylary) KMP-a geçirdi. Bellik üçin aýtsak bu kitaphanalar (librarylar) öň diňe android-da işleýärdi.\n\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*HK7WhoGcWLKF693EMiVlng.png)\n\nKMP-nyň kod paýlaýşy\n\n[**KTOR**](https://ktor.io/) -da işleýän bolsaňyz KTOR server bar we KTOR client bar:\n\n> KTOR bu server side we client side üçin HTTP kitaphana (library) official [Jetbrains](https://www.jetbrains.com/) tarapyndan döredilen\n\nKTOR SERVER kody siz android, ios, desktop we web-da işledip bilmeýäňiz!\n\nKTOR SERVER kod diňe backend ýazanda ulanmaly.\n\nKTOR CLIENT kody tersine diňe client tarapda android,ios,desktop we web ýazanda ulanmaly.\n\nKTOR CLIENT server tarapda ulanyp bolonok.\n\nÝöne CLIENT bilen SERVER tarapyň kesişýän ýerleri bolup bilýär response entity-lar, enum-lar we.ş.m şular ýaly zatlary siz backend we client taraplarda ulanar ýaly common kodda ýazyp bilýäňiz, şonda birinde üýtgese beýlekisindede üýtgeýär.\n\nÝokardaky suratda hem şu tapawutlar görkezýär.\n\n## Aýratynlyklary\n\n**Kotlin Multiplatform — bu Flutter-a alternatiw däl, has dogrysy Native (Kotlin/Swift) — da işleýänlere has hem köp kömek edip biler. Şul ýerde tapawudyna seredeliň:**\n\n1. Kotlin Multiplatform diňe targetlaryň (android, ios, desktop, web, hat-da server side) logikasyny paýlaşýar\n2. Kotlin Multiplatform UI paýlaşanok, beýleki Cross platformalardan tapawudy hem şunda, eger-de sen kotlin multiplatformada android/ios ýazjak bolsan onda UI-ny Swift UI/UIKit we XML/Jetpack compose-da aýratyn her target üçin ýazmaly bolýar. API-dan data çekmeli bolsa, local storage-da saklamaly bolsa, entity-lary convert etmeli bolsa, onda şeýle ýerlerde common code ýazylýar we alynan rezultat UI geçirilýär, UI ýöne aýratyn ýazylýar\n3. Proyektiňiziň arhitekturasynda DATA, DOMAIN, PRESENTATION gatlaklar (layers) bölünen bolsa, bu ýerde DATA we DOMAIN layer-lar common code-da, PRESENTATION layer bolsa her targedyň özünde ýazylýar.\n4. Compile bolanda hem beýlekilerden üýtgeşik işleýär, meselem flutter-da kod ýazaňda c++ üsti bilen işleýän bolsa ähli kodyň, kotlin multiplatform-da her platforma üçin özüne düşnikli binary çykarýar, android, desktop üçin.jar file, ios, mac üçin.framework file.\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*AGp6WUDn1_ANCFJqgqPcTQ.png)\n\nŞu suratda görnüşi ýaly siz kotlin kod ýazýaňyz KMP ony JVM we Native Binary-lara öwürýär\n\n## Koddaky aýratynlyklary\n\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*uNxuVpucp2tlIoPI0vJMXA.png)\n\nKMP proyektyň folder strukturasyna meselem\n\nKMP-da UI **androidApp** papkanyň we **iosApp** papkanyň içinde ýazylýar\n\nCommon kod bolsa **shared** papkanyň içinde döredilýär.\n\n**commonMain** papkanyň içinde **expect** (**abstract**) method-lar döredilýär. Bellik **commonMain** içinde **platform specific** (her platformanyň öz kody) kod ýazyp bolonok, ýagny siz **java.io** import edip sebäbi bul **ios** tarapda ýok diňe android we desktopda işleýär.\n\n**androidMain** we **iosMain** içinde bolsa **abstract** **expect** method-laryň **implementationlary** **actual** method-lar ýazylýar.\n\nMuňa **expect/actual** mehanizm diýilýär geliň onuň näme zatdygyna meselem görkezeýin.\n\n```c\n// commonMain papkanyn icinde doredilyar\nexpect fun getDevice(): String\nexpect fun getVersion(): String\nexpect fun getStoreUrl(): String\n```\n```c\n// androidMain papkanyn icinde yazylyar\nactual fun getDevice(): String = \"android\"\n\nactual fun getVersion(): String = \"1.0.0\"\n\nactual fun getStoreUrl(): String = \"https://play.google.com/store/apps/details?id=com.example.android\"\n```\n```c\n// iosMain papkanyn icinde yazylyar\nactual fun getDevice(): String = \"ios\"\n\nactual fun getVersion(): String = \"1.0.0\"\n\nactual fun getStoreUrl(): String = \"https://apps.apple.com/me/app/wialon-local/id1011136393\"\n```\n\nGeliň biz **android** we **iOS** üçin battery-nyň näçe göterim zarýadynyň bardygyny **flutter** -da we **kotlin multiplatform** da alyp görkezeýin:\n\nIlki bilen [**KMP**](https://kotlinlang.org/docs/multiplatform.html) -da:\n\n```c\n// bu kod common shared papkada doredilyar\nexpect suspend fun getBatteryLevel(): Int\n```\n```c\n// Bu android tarapda yazlyan kod\nimport android.content.Context\nimport android.os.BatteryManager\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.withContext\n\nactual suspend fun getBatteryLevel(): Int = withContext(Dispatchers.IO) {\n    val context = MyApplication.context\n    val batteryLevel: Int\n    if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n      val batteryManager = context.getSystemService(Context.BATTERY_SERVICE) as BatteryManager\n      batteryLevel = batteryManager.getIntProperty(BatteryManager.BATTERY_PROPERTY_CAPACITY)\n    } else {\n      val intent = ContextWrapper(context).registerReceiver(null, IntentFilter(Intent.ACTION_BATTERY_CHANGED))\n      batteryLevel = intent!!.getIntExtra(BatteryManager.EXTRA_LEVEL, -1) * 100 / intent.getIntExtra(BatteryManager.EXTRA_SCALE, -1)\n    }\n\n    return batteryLevel\n}\n```\n```c\n// Bu iOS tarapda yazylyan kod battery zaryadyny almak ucin\nimport platform.UIKit.UIDevice\n\nactual suspend fun getBatteryLevel(): Int {\n    UIDevice.currentDevice().isBatteryMonitoringEnabled = true\n    val batteryLevel = UIDevice.currentDevice().batteryLevel * 100\n    UIDevice.currentDevice().isBatteryMonitoringEnabled = false\n    return batteryLevel.toInt()\n}\n```\n\nÝokardaky koddlarda biz [**expect/actual**](https://www.youtube.com/watch?v=WxCBzV4qUFw) mehanizm ulandyk ýagny common kodda abstract ýazyp implementation-laryny her platforma üçin aýratyn ýazdyk. Bu kody haýsy targetda run edýän bolsaň KMP özi baryp android-da run edýän bolsaň android implementation build bolýa diňe, iOS-da run edýän bolsaň iOS implementation build bolýa diňe. Meselem siz iOS tarap kodyny indi ýazyp otursyňyz importlary etmän kod ýazdyňyz IDE size error görkezip dur edil şol ýagdaýda android run etseňiz iOS import-lar ýok eken diýip error berip duranok android implementation build bolýa diňe we tersine hem şeýle.\n\nKotlin Multiplatform-yň esasy manysy şul mehanizm şuňa gowy düşünilse kotlin multiplatform hiç hilli kyn tarapy ýok galan zatlar native kodda edilýär.\n\nINDI bolsa **Flutter** kodda:\n\n```c\n// lib papkanyn icinde doredilyar\n// Get battery level.\nString _batteryLevel = 'Unknown battery level.';\n\nFuture<void> _getBatteryLevel() async {\n  String batteryLevel;\n  try {\n    final result = await platform.invokeMethod<int>('getBatteryLevel');\n    batteryLevel = 'Battery level at $result % .';\n  } on PlatformException catch (e) {\n    batteryLevel = \"Failed to get battery level: '${e.message}'.\";\n  }\n\n  setState(() {\n    _batteryLevel = batteryLevel;\n  });\n}\n```\n```c\n// MainActivity.kt\n// Android papkanyn icinde yazylyar\nimport androidx.annotation.NonNull\nimport io.flutter.embedding.android.FlutterActivity\nimport io.flutter.embedding.engine.FlutterEngine\nimport io.flutter.plugin.common.MethodChannel\nimport android.content.Context\nimport android.content.ContextWrapper\nimport android.content.Intent\nimport android.content.IntentFilter\nimport android.os.BatteryManager\nimport android.os.Build.VERSION\nimport android.os.Build.VERSION_CODES\n\nclass MainActivity: FlutterActivity() {\n  private val CHANNEL = \"samples.flutter.dev/battery\"\n\n  private fun getBatteryLevel(): Int {\n    val batteryLevel: Int\n    if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n      val batteryManager = getSystemService(Context.BATTERY_SERVICE) as BatteryManager\n      batteryLevel = batteryManager.getIntProperty(BatteryManager.BATTERY_PROPERTY_CAPACITY)\n    } else {\n      val intent = ContextWrapper(applicationContext).registerReceiver(null, IntentFilter(Intent.ACTION_BATTERY_CHANGED))\n      batteryLevel = intent!!.getIntExtra(BatteryManager.EXTRA_LEVEL, -1) * 100 / intent.getIntExtra(BatteryManager.EXTRA_SCALE, -1)\n    }\n\n    return batteryLevel\n  }\n\n  override fun configureFlutterEngine(@NonNull flutterEngine: FlutterEngine) {\n    super.configureFlutterEngine(flutterEngine)\n      MethodChannel(flutterEngine.dartExecutor.binaryMessenger, CHANNEL).setMethodCallHandler {\n      // This method is invoked on the main thread.\n      call, result ->\n      if (call.method == \"getBatteryLevel\") {\n        val batteryLevel = getBatteryLevel()\n\n        if (batteryLevel != -1) {\n          result.success(batteryLevel)\n        } else {\n          result.error(\"UNAVAILABLE\", \"Battery level not available.\", null)\n        }\n      } else {\n        result.notImplemented()\n      }\n    }\n  }\n}\n```\n```c\n// ios papkanyn icinde yazylyan kod\n@UIApplicationMain\n@objc class AppDelegate: FlutterAppDelegate {\n  \n  private func receiveBatteryLevel(result: FlutterResult) {\n    let device = UIDevice.current\n    device.isBatteryMonitoringEnabled = true\n    if device.batteryState == UIDevice.BatteryState.unknown {\n      result(FlutterError(code: \"UNAVAILABLE\",\n                          message: \"Battery level not available.\",\n                          details: nil))\n    } else {\n      result(Int(device.batteryLevel * 100))\n    }\n  }\n\n  override func application(\n    _ application: UIApplication,\n    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n\n    let controller : FlutterViewController = window?.rootViewController as! FlutterViewController\n    let batteryChannel = FlutterMethodChannel(name: \"samples.flutter.dev/battery\",\n                                              binaryMessenger: controller.binaryMessenger)\n    batteryChannel.setMethodCallHandler({\n      [weak self] (call: FlutterMethodCall, result: FlutterResult) -> Void in\n      // This method is invoked on the UI thread.\n      guard call.method == \"getBatteryLevel\" else {\n        result(FlutterMethodNotImplemented)\n        return\n      }\n      self?.receiveBatteryLevel(result: result)\n    })\n\n    GeneratedPluginRegistrant.register(with: self)\n    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n  }\n}\n```\n\nBu flutter kodda biz **Flutter Method Channel** -yň kömegi bilen native kod ýazdyk we ony flutter tarapda ulandyk, ýokarda görnüşi ýaly şul ýönekeýje task-yň üstünde tapawuda seretsek köpüräk iş edilýär we type-safe-ty kynyrak flutter tarapda.\n\nFlutter özüniň UI paýlaşmak üçin özüniň **C++** -da döredilen render engine-nyny ulanýar we ony appyň içinde saklaýar. Munyň özi by default flutter-da Hello world ýazsaňyzam app size-yň uly bolmagyna sebäp bolýar. KMP-da UI paýlaşylanok Native View-lar ulanylýanlygy üçin, Native View-lar hem system view-lary ulanýandygy üçin app-yň içinde render engine saklamak gerek däl, UI aýratyn ýazylýanynyň özi performance tarapdan çalt işlemegine sebäp bolýar KMP-nyň.\n\nÝeri gelende ikisiniň hem proýekta görä gowy taraplary bar, eger sen proýektyňda Native kod kän ýazjak bolsaň, onda nämä gerek Flutter-da ýazmak, we tersine diňe UI paýlaşjak bolsaňyz we Native View-lary ulanmaýan bolsaňyz, onda nämä gerek KMP? Flutter-da ýazanyň gowy.\n\nŞu ýerde belläp geçeli Native View ulanmak diýmek Flutter-da meselem siz [**Yandex Mapkit**](https://pub.dev/packages/yandex_mapkit) ulanýan bolsaňyz, **Video Player** ulanýan bolsaňyz gidip ol arka tarapda Native her platforma üçin aýratyn kod ýazýandyr, ýagny bu ýagdaýda hem tutuş proýektyňda şul iki widget-y kän ulanýan bolsaňyz bu ýerde Flutter siziň performance tarapdan kömek edip bilmez.\n\n## Nädip proýekt döretmeli\n\n1. Android studio-ny açyň, we **Plugin** -lara geçiň, **Kotlin Multiplatform** diýip gözleg ediň we aşakdaky Plugin Install ediň:\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*t4jXDOYBiaf8i0Rq50RjHg.png)\n\n2\\. Android Studio-ny Restart (Ýapyp täzede açyň) ediň\n\n3\\. Indi android studio täzeden açylansoň Täze Proýekt döretmege basyň, we çykan penjireden Kotlin Multiplatform App saýlaň we Next düwmesine basyň:\n\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*N_pa6Fiqta3AZaR0rljgqg.png)\n\n4\\. Soňra gerekli maglumatlary doldurmaly:\n\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*u8Gzv5Igzu9faR4_0xNWoQ.png)\n\n- Application Name-lara näme ýazsaňyzam bolýa\n- Add sample tests for Shared Module bellemäň (check aýyryň)\n- iOS framework distribution — näme zat? Munda ios package manager üçin Gradle ulanaýynmy ýa-da CocoaPods diýip soraýar, CocoaPods goýanyňyz gowy şeýle etseňiz ikisinem bile ulanyp bilýäňiz.\n- Indi Finish basmaly we proýektyň gradle paketlaryny alýança garaşýaňyz.\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*HEi9r_lXDXRqdEfm73DCyA.png)\n\n- şeýleräk proýekt dörär\n- Gradle paketlary alyp bolonson ýokarky menýudan android saýlaň we run knopka basyň:\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*0CR_jDxi5Rpw6glylR1wlA.png)\n\n- ios işletmek üçin täze aşakdaky iOS configuration döretmeli, Edit configurations basyň:\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*ZV3KCvxytk6ugUgcgK4ADA.png)\n\n- Çykan penjireden + goşmak düwmesine basyň we iOS Application saýlaň:\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*bH-XzVzjb_6mKu9Ocuf_fw.png)\n\n- Adyny giriziň, Xcode project file saýlaň — proýektyň içinde iosApp diýip papka bar şoň içinde ýerleşýär `.xcodeproj` file tapmaly, soňra Debug saýlaň we telefon saýlaň meselem Iphone-15, Soňra OK basyň\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*Pz9cAECpkMRQo5PHf6O3Xw.png)\n\n- Şeýle zat çykar ýokarky menýudan run düwmesine basyň\n![](https://miro.medium.com/v2/resize:fit:640/format:webp/1*J9YjGMxn3zA0Cl90UyjT0g.png)\n\n- Soňra proýektyň içindäki iosApp papkany x-code-a açyň we ol ýerden hem run edip bilýäňiz\n\n> **Indiki topik-ler compose multiplatform we kmp gradle strukturasy barada bolar, thanks for attention, üns berip diňläniňiz üçin sagboluň**\n"
}
